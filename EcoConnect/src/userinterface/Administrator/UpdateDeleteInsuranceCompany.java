/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.Administrator;

import Business.EcoSystem;
import Business.Enterprise;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Smithi
 */
public class UpdateDeleteInsuranceCompany extends javax.swing.JPanel {

    /**
     * Creates new form UpdateDeleteInsuranceCompany
     */
    JPanel userProcessContainer;
    EcoSystem business;
    UserAccount user;
    public UpdateDeleteInsuranceCompany(JPanel userProcessContainer, EcoSystem business, UserAccount user) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.user = user;
        populateTable();
//         if(system.getNetworkList().size()>0 ){
//            populateTable();
//        }else{
//             JOptionPane.showMessageDialog(null, "No Insurance added");
//        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnDelIns = new javax.swing.JButton();
        btnUpdIns = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        insTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        comboMngInsLoc = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnBackInsUpd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nameTxtFieldIns = new javax.swing.JTextField();
        addrTxtFieldIns = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(52, 7, 116));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Username:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, 80, -1));

        btnDelIns.setBackground(new java.awt.Color(52, 7, 116));
        btnDelIns.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnDelIns.setForeground(new java.awt.Color(255, 255, 255));
        btnDelIns.setText("DELETE");
        btnDelIns.setPreferredSize(new java.awt.Dimension(156, 43));
        btnDelIns.setRequestFocusEnabled(false);
        btnDelIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelInsActionPerformed(evt);
            }
        });
        add(btnDelIns, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 460, 110, 30));

        btnUpdIns.setBackground(new java.awt.Color(52, 7, 116));
        btnUpdIns.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnUpdIns.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdIns.setText("UPDATE");
        btnUpdIns.setPreferredSize(new java.awt.Dimension(156, 43));
        btnUpdIns.setRequestFocusEnabled(false);
        btnUpdIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdInsActionPerformed(evt);
            }
        });
        add(btnUpdIns, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, 110, 30));

        insTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "UserName"
            }
        ));
        insTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        insTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(insTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, -1, 110));

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(52, 7, 116));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-medical-insurance-64.png"))); // NOI18N
        jLabel5.setText("INSURANCE DETAILS");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 580, 70));

        comboMngInsLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Show All", "Brigham", "Cambridge", "Brookline", "Longwood", "Fenway" }));
        comboMngInsLoc.setPreferredSize(new java.awt.Dimension(140, 30));
        comboMngInsLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMngInsLocActionPerformed(evt);
            }
        });
        add(comboMngInsLoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 170, -1));

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(52, 7, 116));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Location");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 80, 20));

        btnBackInsUpd.setBackground(new java.awt.Color(52, 7, 116));
        btnBackInsUpd.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        btnBackInsUpd.setForeground(new java.awt.Color(255, 255, 255));
        btnBackInsUpd.setText("<<");
        btnBackInsUpd.setPreferredSize(new java.awt.Dimension(80, 30));
        btnBackInsUpd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackInsUpdActionPerformed(evt);
            }
        });
        add(btnBackInsUpd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 40));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(52, 7, 116));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, 50, -1));

        nameTxtFieldIns.setPreferredSize(new java.awt.Dimension(164, 30));
        add(nameTxtFieldIns, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 150, 30));

        addrTxtFieldIns.setPreferredSize(new java.awt.Dimension(164, 30));
        add(addrTxtFieldIns, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, 150, 30));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/a4.jpg"))); // NOI18N
        jLabel1.setFocusable(false);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, 750, 1050));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDelInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelInsActionPerformed
        // TODO add your handling code here:

        Object selectedItem = comboMngInsLoc.getSelectedItem();
        String loc = selectedItem.toString();
        int selectedRow = insTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row.");

        } else {
//            Object obj = insTable.getValueAt(selectedRow, 0);
//            System.out.println("hereeee" + obj);
//            System.out.println("hereeee type" + obj.getClass().getName());
//
//            UserAccount userAccount = (UserAccount) insTable.getValueAt(selectedRow, 0);
//           
//            // Find the corresponding Enterprise using the user account
//            Enterprise insCompany = business.getEnterpriseDirectory().findEnterpriseByUserAccount(userAccount);
//
//            business.getEnterpriseDirectory().getEnterpriseList().remove(insCompany);
//            UserAccount ua = business.getUserAccountDirectory().findUserAccount(insCompany.getName());
//            business.getUserAccountDirectory().getUserAccountList().remove(ua);
//
//            JOptionPane.showMessageDialog(null, "Insurance " + nameTxtFieldIns.getText() + " deleted");
//            populateTable();
//            nameTxtFieldIns.setText("");
//            addrTxtFieldIns.setText("");

            Enterprise ins = (Enterprise) insTable.getValueAt(selectedRow, 0);
            business.getEnterpriseDirectory().getEnterpriseList().remove(ins);
            UserAccount ua = business.getUserAccountDirectory().findUserAccount(ins.getName());
            business.getUserAccountDirectory().getUserAccountList().remove(ua);
 
            //            LabDirectory ld = system.getLabDirectory();
            //            ld.deleteLab(l);
            JOptionPane.showMessageDialog(null, "Insurance " + nameTxtFieldIns.getText() + " deleted");
            populateTable();
            nameTxtFieldIns.setText("");
            addrTxtFieldIns.setText("");

        }
    }//GEN-LAST:event_btnDelInsActionPerformed

    private void btnUpdInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdInsActionPerformed
        // TODO add your handling code here:

        int selectedRow = insTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        } else {
            //            updateJPanel.setVisible(true);
            //            System.out.println("I am here");
            Object selectedItem = comboMngInsLoc.getSelectedItem();
            String loc = selectedItem.toString();
            //    for(Enterprise lab: system.findNetwork(city).getEnterpriseDirectory().getEnterpriseList()){
                //        if lab.getName().equals(selectedItem)
                //    }
            Enterprise lab = (Enterprise) insTable.getValueAt(selectedRow, 0);
            UserAccount ua = business.getUserAccountDirectory().findUserAccount(lab.getName());
            if (!nameTxtFieldIns.getText().matches("[a-zA-Z_]+")) {
                JOptionPane.showMessageDialog(this, "Enter proper name! Name should be string!");
                nameTxtFieldIns.setText("");
                return;
            }
            else if (strongUsername() == false) {

                addrTxtFieldIns.setText("");
                JOptionPane.showMessageDialog(null, "Username should be at least 6 digits and contain at least one upper case letter, one lower case letter, one digit and one special character $, *, # or &.");
                return;
            }
            else {
            }
            lab.setName(nameTxtFieldIns.getText());
            ua.getEmployee().setName(nameTxtFieldIns.getText());
            ua.setUsername(addrTxtFieldIns.getText());
            populateTable();
            nameTxtFieldIns.setText("");
            addrTxtFieldIns.setText("");
        }
    }//GEN-LAST:event_btnUpdInsActionPerformed

    private void insTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insTableMouseClicked
        // TODO add your handling code here:

        DefaultTableModel dtm = (DefaultTableModel) insTable.getModel();

        String name = dtm.getValueAt(insTable.getSelectedRow(), 0).toString();
        String address = dtm.getValueAt(insTable.getSelectedRow(), 1).toString();
        nameTxtFieldIns.setText(name);
        addrTxtFieldIns.setText(address);
    }//GEN-LAST:event_insTableMouseClicked

    private void comboMngInsLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMngInsLocActionPerformed
        // TODO add your handling code here:
        
        Object selectedItem = comboMngInsLoc.getSelectedItem();
        String loc = selectedItem.toString();
        if(loc.equals("Show All")){
            populateTable();
        }else{
            populateTableByLoc();
        }
        
    }//GEN-LAST:event_comboMngInsLocActionPerformed

    private void btnBackInsUpdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackInsUpdActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        //
        //        Component[] comps = this.userProcessContainer.getComponents();
        //        for(Component comp : comps){
            //            if(comp instanceof SystemAdminWorkAreaJPanel){
                //                SystemAdminWorkAreaJPanel systemAdminWorkAreaJPanel= (SystemAdminWorkAreaJPanel) comp;
                //                systemAdminWorkAreaJPanel.populateTree();
                //            }
            //        }
    }//GEN-LAST:event_btnBackInsUpdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addrTxtFieldIns;
    private javax.swing.JButton btnBackInsUpd;
    private javax.swing.JButton btnDelIns;
    private javax.swing.JButton btnUpdIns;
    private javax.swing.JComboBox<String> comboMngInsLoc;
    private javax.swing.JTable insTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTxtFieldIns;
    // End of variables declaration//GEN-END:variables

private void populateTable() {
        Object selectedItem = comboMngInsLoc.getSelectedItem();
        String loc = selectedItem.toString();
        DefaultTableModel model = (DefaultTableModel) insTable.getModel();
        model.setRowCount(0);
//        System.out.println("Ap was here " +city);
//        System.out.println("ap here " +business.getEnterpriseDirectory().getEnterpriseList());

        for(Enterprise ins: business.getEnterpriseDirectory().getEnterpriseList()){
                     System.out.println(ins.getEnterpriseType().getValue().equals("Insurance"));
                     System.out.println(ins.getUserAccountDirectory().getUserAccountList());
                     System.out.println(ins.getName());
                     System.out.println(ins.getUserAccountDirectory().findUserAccount(ins.getName()));
                if(ins.getEnterpriseType().getValue().equals("Insurance")){
            Object[] row = new Object[2];
            row[0] = ins;
            System.out.println("LISTING IT" +business.getUserAccountDirectory().getUserAccountList());
            System.out.println(ins.getName());
                     for(UserAccount ua : business.getUserAccountDirectory().getUserAccountList()){
                         System.out.println(ua.getEmployee().getName());
         }
            UserAccount ua = business.getUserAccountDirectory().findUserAccount(ins.getName());
//            row[0]=ua;
            row[1] = ua.getUsername();
            model.addRow(row);
 
        }
        }
    }

    private void populateTableByLoc() {
        Object selectedItem = comboMngInsLoc.getSelectedItem();
        String loc = selectedItem.toString();
        DefaultTableModel model = (DefaultTableModel) insTable.getModel();
        model.setRowCount(0);

        for (Enterprise ins : business.getEnterpriseDirectory().getEnterpriseList()) {
            if (ins.getEnterpriseType().getValue().equals("Insurance") && business.getUserAccountDirectory().findUserAccount(ins.getName()).getEmployee().getLocation().equals(loc)) {
                Object[] row = new Object[2];
                row[0] = ins;

                UserAccount ua = business.getUserAccountDirectory().findUserAccount(ins.getName());
                row[1] = ua.getUsername();
                model.addRow(row);
            }
        }
    }

    private boolean strongUsername() {
        Pattern pat = Pattern.compile("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$");
        Matcher m = pat.matcher(addrTxtFieldIns.getText());
        boolean boo = m.matches();
        return boo;
    }

  
}
