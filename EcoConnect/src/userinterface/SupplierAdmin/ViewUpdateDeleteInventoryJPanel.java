/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SupplierAdmin;

import Business.EcoSystem;
import Business.SupplierAdmin.Inventory;
import Business.SupplierAdmin.InventoryDirectory;
import Business.SupplierAdmin.Supplier;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Smithi
 */

public class ViewUpdateDeleteInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewUpdateDeleteInventoryJPanel
     */
    JPanel userProcessContainer;
    EcoSystem business;
    UserAccount userAccount;
     
     
public ViewUpdateDeleteInventoryJPanel(JPanel userProcessContainer,UserAccount userAccount, EcoSystem business) {
        initComponents();
        this.userAccount= userAccount;
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUnitsMngInventory = new javax.swing.JTextField();
        btnUpdateMngInventory = new javax.swing.JButton();
        btnDeleteInventory = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNameMngInventory = new javax.swing.JTextField();
        txtManufMngInventory = new javax.swing.JTextField();
        txtPriceMngInventory = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInvItems = new javax.swing.JTable();
        enterpriseLabel = new javax.swing.JLabel();
        btnBackMngInv = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtUnitsMngInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnitsMngInventoryActionPerformed(evt);
            }
        });
        add(txtUnitsMngInventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 430, 160, 30));

        btnUpdateMngInventory.setBackground(new java.awt.Color(52, 7, 116));
        btnUpdateMngInventory.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnUpdateMngInventory.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateMngInventory.setText("UPDATE");
        btnUpdateMngInventory.setPreferredSize(new java.awt.Dimension(156, 43));
        btnUpdateMngInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMngInventoryActionPerformed(evt);
            }
        });
        add(btnUpdateMngInventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 490, 130, 30));

        btnDeleteInventory.setBackground(new java.awt.Color(52, 7, 116));
        btnDeleteInventory.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnDeleteInventory.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteInventory.setText("DELETE");
        btnDeleteInventory.setPreferredSize(new java.awt.Dimension(156, 43));
        btnDeleteInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteInventoryActionPerformed(evt);
            }
        });
        add(btnDeleteInventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, 110, 30));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(52, 7, 116));
        jLabel2.setText("Inventory Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, -1));

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(52, 7, 116));
        jLabel3.setText("Manufacturer:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, 117, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(52, 7, 116));
        jLabel4.setText("Price per unit:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 400, -1, -1));

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(52, 7, 116));
        jLabel5.setText("Units available:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 440, -1, -1));

        txtNameMngInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameMngInventoryActionPerformed(evt);
            }
        });
        add(txtNameMngInventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 160, 30));

        txtManufMngInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManufMngInventoryActionPerformed(evt);
            }
        });
        add(txtManufMngInventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 160, 30));

        txtPriceMngInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceMngInventoryActionPerformed(evt);
            }
        });
        add(txtPriceMngInventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, 160, 30));

        tblInvItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Inventory Name", "Manufacturer", "Price per unit", "Units available"
            }
        ));
        tblInvItems.setGridColor(new java.awt.Color(255, 255, 255));
        tblInvItems.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblInvItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInvItemsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblInvItems);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 526, 100));

        enterpriseLabel.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(52, 7, 116));
        enterpriseLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-inventory-48.png"))); // NOI18N
        enterpriseLabel.setText("MANAGE INVENTORY");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 340, 60));

        btnBackMngInv.setBackground(new java.awt.Color(52, 7, 116));
        btnBackMngInv.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnBackMngInv.setForeground(new java.awt.Color(255, 255, 255));
        btnBackMngInv.setText("<<");
        btnBackMngInv.setPreferredSize(new java.awt.Dimension(80, 30));
        btnBackMngInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackMngInvActionPerformed(evt);
            }
        });
        add(btnBackMngInv, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 40));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/supManage.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, 550, 530));
    }// </editor-fold>//GEN-END:initComponents

    private void txtUnitsMngInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnitsMngInventoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnitsMngInventoryActionPerformed

    private void btnUpdateMngInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMngInventoryActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRow = tblInvItems.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        } else {
            if (!txtNameMngInventory.getText().matches("[a-zA-Z_]+")) {
                JOptionPane.showMessageDialog(this, "Enter proper inventory item name");
                txtNameMngInventory.setText("");
                return;
            } else if (!txtManufMngInventory.getText().matches("[a-zA-Z_]+")) {
                JOptionPane.showMessageDialog(this, "Enter proper manufacturer name");
                txtManufMngInventory.setText("");
                return;
            } else if (!txtPriceMngInventory.getText().matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Enter price in Integers");
                txtPriceMngInventory.setText("");
                return;
            }  else if (!txtUnitsMngInventory.getText().matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Enter availability in Integers");
                txtUnitsMngInventory.setText("");
                return;
            } 
            else{}
            //            updateJPanel.setVisible(true);

            Inventory i = (Inventory) tblInvItems.getValueAt(selectedRow, 0);
            //            System.out.println("item : " + t.getName());
            i.setName(txtNameMngInventory.getText());
            i.setManufacturer(txtManufMngInventory.getText());
            i.setPrice(Integer.parseInt(txtPriceMngInventory.getText()));
            i.setAvailability(Integer.parseInt(txtUnitsMngInventory.getText()));
            populateTable();
            txtNameMngInventory.setText("");
            txtManufMngInventory.setText("");
            txtPriceMngInventory.setText("");
            txtUnitsMngInventory.setText("");

        }
          
    }//GEN-LAST:event_btnUpdateMngInventoryActionPerformed

    private void btnDeleteInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteInventoryActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRow = tblInvItems.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row.");

        } else {
            Inventory i = (Inventory) tblInvItems.getValueAt(selectedRow, 0);
            // MSS check
                        Supplier supplier= business.getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName());

//            Supplier supplier= system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName());
            supplier.getInventoryDirectory().deleteInventoryItem(i);
            JOptionPane.showMessageDialog(null, "Inventory item " + txtNameMngInventory.getText() + " deleted");
            populateTable();
            txtNameMngInventory.setText("");
            txtNameMngInventory.setText("");
            txtManufMngInventory.setText("");
            txtPriceMngInventory.setText("");
            txtUnitsMngInventory.setText("");

        }
          
    }//GEN-LAST:event_btnDeleteInventoryActionPerformed

    private void txtNameMngInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameMngInventoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameMngInventoryActionPerformed

    private void txtManufMngInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManufMngInventoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManufMngInventoryActionPerformed

    private void txtPriceMngInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceMngInventoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceMngInventoryActionPerformed

    private void tblInvItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInvItemsMouseClicked
        // TODO add your handling code here:

        DefaultTableModel dtm = (DefaultTableModel) tblInvItems.getModel();
        String name = dtm.getValueAt(tblInvItems.getSelectedRow(), 0).toString();
        String manufacturer = (dtm.getValueAt(tblInvItems.getSelectedRow(), 1).toString());
        int price = Integer.parseInt(dtm.getValueAt(tblInvItems.getSelectedRow(), 2).toString());
        int avail = Integer.parseInt(dtm.getValueAt(tblInvItems.getSelectedRow(), 3).toString());

        txtNameMngInventory.setText(name);
        txtManufMngInventory.setText(String.valueOf(manufacturer));
        txtPriceMngInventory.setText(String.valueOf(price));
        txtUnitsMngInventory.setText(String.valueOf(avail));
        
    }//GEN-LAST:event_tblInvItemsMouseClicked

    private void btnBackMngInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackMngInvActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_btnBackMngInvActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackMngInv;
    private javax.swing.JButton btnDeleteInventory;
    private javax.swing.JButton btnUpdateMngInventory;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInvItems;
    private javax.swing.JTextField txtManufMngInventory;
    private javax.swing.JTextField txtNameMngInventory;
    private javax.swing.JTextField txtPriceMngInventory;
    private javax.swing.JTextField txtUnitsMngInventory;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
                DefaultTableModel model = (DefaultTableModel) tblInvItems.getModel();
        model.setRowCount(0);
        // MSS check
//       Supplier supplier= system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName());
                       Supplier supplier= business.getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName());


            for(Inventory i: supplier.getInventoryDirectory().getInventoryList()){
            Object[] row = new Object[4];
            row[0] = i;
            row[1] = i.getManufacturer();
            row[2] = i.getPrice();
            row[3] = i.getAvailability();

            model.addRow(row);
               }
        
    }
    
}
