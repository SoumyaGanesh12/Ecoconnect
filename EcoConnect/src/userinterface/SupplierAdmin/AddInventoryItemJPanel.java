/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SupplierAdmin;

import Business.EcoSystem;
import Business.SupplierAdmin.Inventory;
import Business.SupplierAdmin.InventoryDirectory;
import Business.SupplierAdmin.Supplier;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Malini
 */
public class AddInventoryItemJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddInventoryItemJPanel
     */
    JPanel userProcessContainer;
    EcoSystem business;
    UserAccount userAccount;     
     
public AddInventoryItemJPanel(JPanel userProcessContainer,UserAccount userAccount, EcoSystem business) {
        initComponents();
        this.userAccount= userAccount;
        this.userProcessContainer = userProcessContainer;
        this.business = business;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtInvName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtmanufacName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtpriceInv = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtavailablenv = new javax.swing.JTextField();
        btnAddInv = new javax.swing.JButton();
        btnBackInv = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(52, 7, 116));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 110, -1));
        add(txtInvName, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, 180, 30));

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(52, 7, 116));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Manufacturer:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 120, -1));
        add(txtmanufacName, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 140, 180, 30));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(52, 7, 116));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Price per Item:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 200, -1, -1));
        add(txtpriceInv, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 190, 180, 30));

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(52, 7, 116));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Number of units available: ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, -1, -1));
        add(txtavailablenv, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 230, 180, 30));

        btnAddInv.setBackground(new java.awt.Color(52, 7, 116));
        btnAddInv.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnAddInv.setForeground(new java.awt.Color(255, 255, 255));
        btnAddInv.setText("ADD");
        btnAddInv.setPreferredSize(new java.awt.Dimension(156, 43));
        btnAddInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddInvActionPerformed(evt);
            }
        });
        add(btnAddInv, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 330, 100, 40));

        btnBackInv.setBackground(new java.awt.Color(52, 7, 116));
        btnBackInv.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnBackInv.setForeground(new java.awt.Color(255, 255, 255));
        btnBackInv.setText("<<");
        btnBackInv.setPreferredSize(new java.awt.Dimension(80, 30));
        btnBackInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackInvActionPerformed(evt);
            }
        });
        add(btnBackInv, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 40));

        enterpriseLabel.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(52, 7, 116));
        enterpriseLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-inventory-48.png"))); // NOI18N
        enterpriseLabel.setText("ADD INVENTORY ITEMS");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 420, 60));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/inventory001.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 30, 400, 540));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddInvActionPerformed
        // TODO add your handling code here:

        
        if (txtInvName.getText().isEmpty() || txtmanufacName.getText().isEmpty() || txtpriceInv.getText().isEmpty() || txtavailablenv.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter all details of the Inventory Item");
            return;
        } else {
                         if (!txtInvName.getText().matches("[a-zA-Z_]+")) {
                JOptionPane.showMessageDialog(this, "Enter proper inventory item name");
                txtInvName.setText("");
                return;
            } else if (!txtmanufacName.getText().matches("[a-zA-Z_]+")) {
                JOptionPane.showMessageDialog(this, "Enter proper manufacturer name");
                txtmanufacName.setText("");
                return;
            } else if (!txtpriceInv.getText().matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Enter price in Integers");
                txtpriceInv.setText("");
                return;
            }  else if (!txtavailablenv.getText().matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Enter availability in Integers");
                txtavailablenv.setText("");
                return;
            } 
            else{}
            String name = txtInvName.getText();
            String manufacturer = txtmanufacName.getText();
            Integer price = Integer.parseInt(txtpriceInv.getText());
            int avail = Integer.parseInt(txtavailablenv.getText());
            Inventory i = new Inventory(name,manufacturer,price,avail);
//                if( system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName()).getInventoryDirectory()==null ||
//                        system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName()) == null ) {
//                    InventoryDirectory inventoryList = new InventoryDirectory();
//                    inventoryList.addInventory(i);
//                    system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName()).setInventoryDirectory(inventoryList);
//                }
//                else {
//                    system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName()).getInventoryDirectory().addInventory(i);
//                    //System.out.println("test list is here "+system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getLabDirectory().findLab(userAccount.getEmployee().getName()).getTestlist().getTestList());
//                }

// MSS check
if( business.getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName()).getInventoryDirectory()==null ||
                        business.getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName()) == null ) {
                    InventoryDirectory inventoryList = new InventoryDirectory();
                    inventoryList.addInventory(i);
                    business.getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName()).setInventoryDirectory(inventoryList);
                }
                else {
                    business.getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getSupplierDirectory().findSupplier(userAccount.getEmployee().getName()).getInventoryDirectory().addInventory(i);
                    //System.out.println("test list is here "+system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(userAccount.getEmployee().getName()).getOrganizationDirectory().getLabDirectory().findLab(userAccount.getEmployee().getName()).getTestlist().getTestList());
                }
            
            JOptionPane.showMessageDialog(null, " Inventory Item added");
            txtInvName.setText("");
            txtmanufacName.setText("");
            txtpriceInv.setText("");
            txtavailablenv.setText("");
           
    } 
    }//GEN-LAST:event_btnAddInvActionPerformed

    private void btnBackInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackInvActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_btnBackInvActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddInv;
    private javax.swing.JButton btnBackInv;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtInvName;
    private javax.swing.JTextField txtavailablenv;
    private javax.swing.JTextField txtmanufacName;
    private javax.swing.JTextField txtpriceInv;
    // End of variables declaration//GEN-END:variables
}
