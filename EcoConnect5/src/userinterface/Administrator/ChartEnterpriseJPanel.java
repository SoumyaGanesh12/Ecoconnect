/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.Administrator;

import Business.EcoSystem;
import Business.Enterprise;
import Business.UserAccount.UserAccount;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author HP
 */
public class ChartEnterpriseJPanel extends javax.swing.JPanel {

     /**
     * Creates new form ChartEnterpriseJPanel
     */
    JPanel userProcessContainer;
    EcoSystem business;
    UserAccount user;

    ChartEnterpriseJPanel(JPanel userProcessContainer, EcoSystem business, UserAccount user) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.business=business;
        this.user=user;
        populateData();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChartPanel = new javax.swing.JPanel();
        btnBackSup = new javax.swing.JButton();

        ChartPanel.setBackground(new java.awt.Color(255, 255, 255));

        btnBackSup.setBackground(new java.awt.Color(52, 7, 116));
        btnBackSup.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        btnBackSup.setForeground(new java.awt.Color(255, 255, 255));
        btnBackSup.setText("<<");
        btnBackSup.setPreferredSize(new java.awt.Dimension(80, 30));
        btnBackSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackSupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ChartPanelLayout = new javax.swing.GroupLayout(ChartPanel);
        ChartPanel.setLayout(ChartPanelLayout);
        ChartPanelLayout.setHorizontalGroup(
            ChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackSup, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(622, Short.MAX_VALUE))
        );
        ChartPanelLayout.setVerticalGroup(
            ChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChartPanelLayout.createSequentialGroup()
                .addComponent(btnBackSup, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 433, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ChartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ChartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackSupActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        //
        //        Component[] comps = this.userProcessContainer.getComponents();
        //        for(Component comp : comps){
            //            if(comp instanceof SystemAdminWorkAreaJPanel){
                //                SystemAdminWorkAreaJPanel systemAdminWorkAreaJPanel= (SystemAdminWorkAreaJPanel) comp;
                //                systemAdminWorkAreaJPanel.populateTree();
                //            }
            //        }
    }//GEN-LAST:event_btnBackSupActionPerformed

public void populateData() {
         
        DefaultPieDataset dataSet = new DefaultPieDataset();
        int Hospital = 0;
        int Pharmacy = 0;
        int Lab = 0;
        int Insurance = 0;
        int Emergency = 0;
        int Supplier = 0;
        
        
        try {

            
            
            for(Enterprise org : business.getEnterpriseDirectory().getEnterpriseList()){
                   System.out.println("nett"+business.getEnterpriseDirectory().getEnterpriseList());
               

                if (org.getEnterpriseType().getValue().equals("Hospital")) {
                          System.out.println("enterprise--"+org);
                    Hospital++;
                } else if (org.getEnterpriseType().getValue().equals("Pharmacy")) {
                    Pharmacy++;
                } else if (org.getEnterpriseType().getValue().equals("Lab")) {
                  Lab++;
                } else if (org.getEnterpriseType().getValue().equals("Insurance")) {
                   Insurance++;
                } else if (org.getEnterpriseType().getValue().equals("Emergency")){
                    Emergency++;
                } else if (org.getEnterpriseType().getValue().equals("Supplier")) {
                     Supplier++;
                } 
                }
            
        
            
            dataSet.setValue("Hospitals", Hospital);
            dataSet.setValue("Pharmacy", Pharmacy);
            dataSet.setValue("Lab", Lab);
            dataSet.setValue("Insurance", Insurance);
            dataSet.setValue("Emergency", Emergency);
            dataSet.setValue("Supplier", Supplier);

            JFreeChart chart = ChartFactory.createPieChart3D("Enterprises", dataSet, true, true, Locale.ENGLISH);
            chart.setBackgroundPaint(Color.WHITE);
            chart.getTitle().setPaint(Color.DARK_GRAY);
            
            ChartPanel chartpanel = new ChartPanel(chart);
            chartpanel.setDomainZoomable(true);

            ChartPanel.setLayout(new BorderLayout());
            ChartPanel.add(chartpanel, BorderLayout.EAST);
            ChartPanel.setVisible(true);
        } catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(null, " No Data to display");
            return;
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChartPanel;
    private javax.swing.JButton btnBackSup;
    // End of variables declaration//GEN-END:variables
}
